networks:
  default:

services:
  api:
    build:
      context: ./BusCatalog.Api
      dockerfile: Dockerfile
    container_name: buscatalog-api
    environment:
      - SpaUrl=http://localhost:5002
      - ScraperUrl=http://scraper:8080
      - LinesConsumer:BootstrapServers=kafka:9092
      - LinesConsumer:Topic=public.lines.sync
    ports:
      - "5001:80"
    networks:
      - default

  spa:
    build:
      context: ./BusCatalog.Spa
      dockerfile: Dockerfile
    container_name: buscatalog-spa
    ports:
      - "5002:80"
    networks:
      - default

  scraper:
    build:
      context: ./BusCatalog.Scraper
      dockerfile: Dockerfile
    container_name: buscatalog-scraper
    environment:
      - CONFIGURATION_APIURL=http://api
      - CONFIGURATION_LINESPRODUCER_BOOTSTRAPSERVERS=kafka:9092
    ports:
      - "5003:8080"
    networks:
      - default

  kafka:
    image: 'bitnami/kafka:3.9'
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_KRAFT_CLUSTER_ID=1
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092       # When acessing from the inside containers
      #- KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092  # When acessing from the outside containers
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@localhost:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - '9092:9092'
      - '9093:9093'
    networks:
      - default

  kafka-init:
    image: 'bitnami/kafka:3.9'
    depends_on:
      - kafka
    entrypoint: |
      bash -c "
        kafka-topics.sh --create --topic public.lines.sync --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1
      "
    networks:
      - default